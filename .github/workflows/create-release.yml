name: Create a release
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: The version to name to use then pushing to the container registry
#  push:
#    branches:
#      - main-enterprise

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write

jobs:
  build:
    if: ${{ github.actor != 'dependabot'}}
    runs-on: ubuntu-latest
    environment: create-release
    outputs:
      release: ${{ inputs.version }} # ${{ steps.prerelease.outputs.release }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 16.x
          cache: "npm"

      - run: npm install

      - name: Log in to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to an Azure Container Registry through the Docker CLI
        run: az acr login --name ${{ env.REGISTRY }}

      - name: Build Docker Image Locally
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise

      - name: Inspect the Docker Image
        run: |
          docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise

      # Not sure if  this actually does anything, also I don't have the setup yet. Let's skip it for now (the primary testing happens in CI anyways).
      # - name: Run Functional Tests
      #   id: functionaltest
      #   run: |
      #     docker run --env APP_ID=${{ secrets.APP_ID }} --env PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} --env WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }} -d -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise
      #     sleep 10
      #     curl http://localhost:3000

      # The repo for this action is archived. Doing the version manually for now.
      # - name: Tag a final release
      #   id: finalrelease
      #   uses: actionsdesk/semver@82aa4310e4e21c59cd0020007a4278e733e81dcb
      #   with:
      #     bump: final
      - name: Push Docker Image
        if: ${{ success() }}
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${RELEASE_VERSION}
